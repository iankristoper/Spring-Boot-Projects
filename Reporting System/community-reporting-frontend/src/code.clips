//this is for sign up - pop up box window

import React, { useState } from "react";
import {
  Container,
  TextField,
  Button,
  Typography,
  Box,
  Paper,
  MenuItem,
  Select,
  InputLabel,
  FormControl,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Alert
} from "@mui/material";
import axios from "axios";
import { useNavigate } from "react-router-dom";

export default function Signup() {
  const [form, setForm] = useState({
    username: "",
    email: "",
    password: "",
    city: ""
  });
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");
  const [loading, setLoading] = useState(false);
  const [openPopup, setOpenPopup] = useState(false);

  const navigate = useNavigate();

  const handleChange = (e) =>
    setForm({ ...form, [e.target.name]: e.target.value });

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");
    setSuccess("");
    setLoading(true);

    try {
      const response = await axios.post(
        "http://localhost:8080/api/auth/signup",
        form
      );
      console.log("‚úÖ Signup Success:", response.data);

      setSuccess("Account created successfully! You can now log in.");
      setOpenPopup(true);

      // clear form
      setForm({ username: "", email: "", password: "", city: "" });
    } catch (err) {
      console.error("‚ùå Signup Failed:", err);
      setError(err.response?.data?.message || "Something went wrong. Try again.");
      setOpenPopup(true);
    } finally {
      setLoading(false);
    }
  };

  return (
    <Container maxWidth="sm" sx={{ mt: 10 }}>
      <Paper sx={{ p: 4, borderRadius: "16px", bgcolor: "background.paper" }}>
        {/* üî• Updated heading style */}
        <Typography
          variant="h5"
          gutterBottom
          sx={{ mb: 2, fontWeight: "bold", textAlign: "center", color: "primary.main" }}
        >
          Sign Up
        </Typography>

        <Box component="form" onSubmit={handleSubmit}>
          <TextField
            fullWidth
            margin="normal"
            label="Username"
            name="username"
            value={form.username}
            onChange={handleChange}
          />
          <TextField
            fullWidth
            margin="normal"
            label="Email"
            name="email"
            value={form.email}
            onChange={handleChange}
          />
          <TextField
            fullWidth
            margin="normal"
            label="Password"
            type="password"
            name="password"
            value={form.password}
            onChange={handleChange}
          />

          {/* City selection */}
          <FormControl fullWidth margin="normal">
            <InputLabel>City</InputLabel>
            <Select
              name="city"
              value={form.city}
              onChange={handleChange}
              label="City"
            >
              <MenuItem value="Cebu City">Cebu City</MenuItem>
              <MenuItem value="Mandaue City">Mandaue City</MenuItem>
              <MenuItem value="Lapu-Lapu City">Lapu-Lapu City</MenuItem>
            </Select>
          </FormControl>

          <Button
            fullWidth
            type="submit"
            variant="contained"
            sx={{ mt: 2, borderRadius: "12px", fontWeight: "bold" }}
            disabled={loading}
          >
            {loading ? "Signing up..." : "Sign Up"}
          </Button>
        </Box>
      </Paper>

      {/* ‚úÖ Popup Dialog */}
      <Dialog open={openPopup} onClose={() => setOpenPopup(false)}>
        <DialogTitle>{success ? "‚úÖ Success" : "‚ùå Error"}</DialogTitle>
        <DialogContent>
          {success ? (
            <Alert severity="success">{success}</Alert>
          ) : (
            <Alert severity="error">{error}</Alert>
          )}
        </DialogContent>
        <DialogActions>
          {success ? (
            <Button
              onClick={() => {
                setOpenPopup(false);
                navigate("/login"); // redirect to login
              }}
              color="primary"
              variant="contained"
            >
              Go to Login
            </Button>
          ) : (
            <Button onClick={() => setOpenPopup(false)} color="error">
              Close
            </Button>
          )}
        </DialogActions>
      </Dialog>
    </Container>
  );
}

==============================================================================
==============================================================================
//dashboard with out footer

import React from "react";
import { Container, Paper, Typography, Button, Box, Stack } from "@mui/material";
import DynamicFeedIcon from "@mui/icons-material/DynamicFeed";
import AssignmentTurnedInIcon from "@mui/icons-material/AssignmentTurnedIn";
import HistoryIcon from "@mui/icons-material/History";
import useSessionTimeout from "../hooks/useSessionTimeout";

export default function Dashboard() {
  useSessionTimeout(3600000); // 1 hour inactivity

  const cards = [
    {
      title: "Feed",
      desc: "Browse reports from the community.",
      icon: <DynamicFeedIcon sx={{ fontSize: 50, color: "yellow" }} />,
      button: "View Feed",
    },
    {
      title: "My Reports",
      desc: "Track and manage your submitted reports.",
      icon: <AssignmentTurnedInIcon sx={{ fontSize: 50, color: "yellow" }} />,
      button: "View Reports",
    },
    {
      title: "Report History",
      desc: "View past reports and resolutions.",
      icon: <HistoryIcon sx={{ fontSize: 50, color: "yellow" }} />,
      button: "View History",
    },
  ];

  return (
    <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
      {/* Header */}
      <Paper
        elevation={3}
        sx={{
          p: { xs: 3, sm: 4 },
          borderRadius: "16px",
          bgcolor: "black",
          color: "white",
          textAlign: "center",
          wordWrap: "break-word",
        }}
      >
        <Typography
          variant="h4"
          fontWeight="bold"
          sx={{ color: "yellow", fontSize: { xs: "1.5rem", sm: "2rem" } }}
        >
          Reporting Dashboard
        </Typography>
        <Typography
          variant="body1"
          sx={{
            mt: { xs: 2, sm: 3 },
            fontWeight: "bold",
            fontSize: { xs: "0.9rem", sm: "1rem" },
          }}
        >
          Welcome back, User üëã
        </Typography>
      </Paper>

      {/* Action Cards using Stack for responsive wrapping */}
      <Stack
        direction={{ xs: "column", sm: "row" }}
        spacing={3}
        justifyContent="center"
        sx={{ mt: 2 }}
      >
        {cards.map((card, index) => (
          <Box
            key={index}
            sx={{
              flex: 1,
              minWidth: { xs: "280px", sm: "0" }, // ‚úÖ ensures mobile cards are equal
              maxWidth: { xs: "100%", sm: "320px" }, // consistent max width
              alignSelf: "stretch", // ‚úÖ ensures equal height
            }}
          >
            <Paper
              elevation={4}
              sx={{
                p: { xs: 3, sm: 4 },
                textAlign: "center",
                borderRadius: "16px",
                bgcolor: "background.paper",
                display: "flex",
                flexDirection: "column",
                justifyContent: "space-between",
                alignItems: "center",
                height: "100%",
                wordWrap: "break-word",
              }}
            >
              {card.icon}
              <Box sx={{ mt: 2, flexGrow: 1 }}>
                <Typography
                  variant="h6"
                  sx={{
                    fontWeight: "bold",
                    fontSize: { xs: "1rem", sm: "1.2rem" },
                  }}
                >
                  {card.title}
                </Typography>
                <Typography
                  variant="body2"
                  sx={{
                    mt: 1,
                    mb: 2,
                    fontSize: { xs: "0.85rem", sm: "0.95rem" },
                  }}
                >
                  {card.desc}
                </Typography>
              </Box>
              <Button
                variant="contained"
                sx={{
                  bgcolor: "black",
                  color: "yellow",
                  borderRadius: "12px",
                  textTransform: "none",
                  fontWeight: "bold",
                  py: 1,
                }}
                fullWidth
              >
                {card.button}
              </Button>
            </Paper>
          </Box>

          
        ))}
      </Stack>
      {/* Footer */}


    </Container>
    
  );
  
}
